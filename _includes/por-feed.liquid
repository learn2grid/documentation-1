---
layout: ./nodes.liquid
section: ethereum
---

{% case metadata.ecosystem %}
  {% when "solana" %}
     <p>To learn how to implement these feeds, see the <a href="/docs/solana/using-data-feeds-solana/">Solana Examples for Consuming Data Feeds</a>.</p>
     <p>To learn how to obtain SOL tokens on the Solana Devnet, see the <a href="https://docs.solana.com/cli/transfer-tokens#airdrop-some-tokens-to-get-started">Solana Documentation</a>.</p>
  {% else %}
     <p>To learn how to implement these feeds, see the <a href="/docs/get-the-latest-price/">Ethereum Examples for Consuming Data Feeds</a>.</p>
     <p>For LINK token and Faucet details, see the <a href="/docs/link-token-contracts/">LINK Token Contracts</a> page.</p>
     <p>
       The Ethereum Merge is coming soon. See the <a href="/docs/ethereum-proof-of-stake-merge/">Ethereum Proof-of-Stake Merge</a> page to learn how Chainlink is supporting the Ethereum Merge.
     </p>
{% endcase %}

<style>
    table {
        border-collapse: collapse;
        width:100%;
    }
    th, td {
        border: 1px solid #dfe2e5;
        padding: 6px;
    }
    thead tr {
        background-color: #f6f8fa;
    }
    tr:nth-child(2n) {
        background-color: rgb(251, 252, 253);
    }
    .detail-hidden {
        display: none;
    }
    input {
        margin-right:8px;
    }

    .hovertext {
    position: relative;
    }

    .hovertext:before {
      content: attr(data-hover);
      visibility: hidden;
      opacity: 0;
      background-color: white;
      color: #375bd2;
      text-align: center;
      padding: 4px;
      outline: 1px solid #375bd2;
      font-color: #375bd2;
      border-radius: 2px;
      position: absolute;
      z-index: 1;
      bottom: 120%;
    }

    .hovertext:hover:before {
      opacity: 1;
      visibility: visible;
    }

    .proxy-pair-column {
      display: inline-flex;
    }

    .feed-category {
      display: flex;
      justify-content: center;
      align-items: center;
      margin-right: 2px;
    }

    .proxy-pair {
      min-width: 107px;
    }

    hr.shutDate {
        margin: 2px;
        border: 0;
        height: 1px;
        background: #dfe2e5;
    }

    div.shutDate {
        font-size: 11px;
        text-align: center;
        line-height: 1.25em;
    }

</style>

<div id="categories">
    <p>Data feeds reside in the following categories:</p>
    <ul>
      <li>ðŸŸ¢ <a href="/docs/selecting-data-feeds/#ðŸŸ¢-verified-feeds"><strong>Verified Feeds</strong></a>: Feeds that follow a standardized data feeds workflow</li>
      <li>ðŸŸ¡ <a href="/docs/selecting-data-feeds/#ðŸŸ¡-monitored-feeds"><strong>Monitored Feeds</strong></a>: Feeds under review by the Chainlink Labs team to support the stability of the broader ecosystem</li>
      <li>ðŸ”µ <a href="/docs/selecting-data-feeds/#-custom-feeds"><strong>Custom Feeds</strong></a>: Feeds built to serve a specific use case and might not be suitable for general use</li>
      <li>âš« <a href="/docs/selecting-data-feeds/#-specialized-feeds"><strong>Specialized Feeds</strong></a>: Purpose-built feeds that might rely on contracts maintained by external entities and require in-depth understanding of composition methodology before use</li>
      <li>â­• <a href="/docs/reference-contracts/#deprecation-of-chainlink-data-feeds"><strong>Deprecating</strong></a>: These feeds are scheduled for deprecation.</li>
    </ul>
    <p>See the <a href="/docs/selecting-data-feeds/">Selecting Quality Data Feeds</a> page for complete details about each category.</p>
</div>

{% if metadata.l2healthflag == "arbitrum" or metadata.l2healthflag == "optimism" or metadata.l2healthflag == "metis" %}
<rdme-callout theme="warn">
   <p>This is an L2 network. As a best practice, use the L2 sequencer feed to verify the status of the sequencer when running applications on L2 networks. See the <a href="/docs/l2-sequencer-flag/">L2 Sequencer Uptime Feeds</a> page for examples.
   </p>
</rdme-callout>
{% endif %}

<div id="categories">
<rdme-callout theme="info">
   <p>Please review the <a href="https://docs.chain.link/docs/selecting-data-feeds/#risk-mitigation">risk mitigation documentation</a> and <a href="https://chain.link/terms">chain.link/terms</a> for more detail on the risks of using data feeds and your responsibilities for risk mitigation.
   </p>
</rdme-callout>
</div>

{% if metadata.networkstatusurl %}
<div>
<p>Track the status of this network at <a href="{{metadata.networkstatusurl}}">{{metadata.networkstatusurl}}.</a></p>
</div>
{% endif %}

<div id="feed-data">
    Loading feeds...
</div>

<script>
    dest = document.getElementById('feed-data');
    let showExtraDetails = false;
    let feedCategories = {
        "verified": '<span class="hovertext feed-category" data-hover="Verified"><a href="/docs/selecting-data-feeds/#ðŸŸ¢-verified-feeds" alt="Verified" target="_blank">ðŸŸ¢</a></span>',
        "monitored": '<span class="hovertext feed-category" data-hover="Monitored"><a href="/docs/selecting-data-feeds/#ðŸŸ¡-monitored-feeds" alt="Monitored" target="_blank">ðŸŸ¡</a></span>',
        "custom": '<span class="hovertext feed-category" data-hover="Custom"><a href="/docs/selecting-data-feeds/#-custom-feeds" alt="Custom" target="_blank">ðŸ”µ</a></span>',
        "specialized": '<span class="hovertext feed-category" data-hover="Specialized"><a href="/docs/selecting-data-feeds/#-specialized-feeds" alt="Specialized" target="_blank">âš«</a></span>',
        "deprecating": '<span class="hovertext feed-category" data-hover="Deprecating"><a href="#categories" alt="Deprecating" target="_blank">â­•</a></span>'
    }
    render = (data) => {
        let html = '';
        if(data) {
            for(let chain in data){
                for(let network of data[chain].networks) {
                    if (network.dataType == "por") {
                        html += `<h2 id="${network.name}">${network.name} <a class="anchor" href="#${network.name}"><img src="/images/link.svg" alt="Link to this section"></a></h2>`;
                        if(network.name == "Kovan Testnet (Deprecated)" || network.name == "Rinkeby Testnet (Deprecated)") {
                            html += `<rdme-callout theme="warn"><p>This network is <a href="https://ethereum.org/en/developers/docs/networks/#ethereum-testnets" target="_blank" rel="noopener">officially deprecated</a> and is no longer supported. <a href="#Goerli%20Testnet">Goerli</a> is the recommended testnet for Chainlink on Ethereum.</p></rdme-callout>`
                        }
                        html += `<label><input type="checkbox" class="extra" ${showExtraDetails ? 'checked="checked"' : ''}>Show more details</input></label>`;
                        let proxyList = '';
                        for(let proxy of network.proxies) {
                            proxyList += `
                            <tr id="${network.name} ${proxy.pair}">
                                <td rowspan="2" ><div class="proxy-pair-column">${feedCategories[proxy.feedCategory] || ''}<code class="proxy-pair">${proxy.pair}</code></div>
                                ${ proxy.shutdownDate ? '<hr class="shutDate"></hr><div class="shutDate">Deprecating:<br/>' + proxy.shutdownDate + '</div>' : '' }
                                </td>
                                <td><a href="${network.url.replace('%s',proxy.proxy)}"><code>${proxy.proxy}</code></a></td>
                                <td rowspan="2" ${ showExtraDetails ? '' : 'class="detail-hidden"'}>${proxy.deviationThreshold ? (proxy.deviationThreshold + '%') : 'N/A'}</td>
                                <td rowspan="2" ${ showExtraDetails ? '' : 'class="detail-hidden"'}>${proxy.heartbeat ? proxy.heartbeat : 'N/A'}</td>
                                <td rowspan="2" ${ showExtraDetails ? '' : 'class="detail-hidden"'}>${proxy.decimals ? proxy.decimals : 'N/A'}</td>
                            </tr>
                            <tr>
                                <td>
                                    <ul>
                                        <li>Asset: <code>${proxy.assetName}</code></li>
                                        <li>Reserve type: <code>${proxy.por.type}</code></li>
                                        <li>Source: <a href="${proxy.por.source}" target="_blank">${proxy.por.source}</a></li>
                                    </ul>
                                </td>
                            </tr>
                            `;
                        }

                        html += `
                            <table>
                            <thead>
                            <tr>
                            <th>PoR feed</th>
                            <th>Address and info</th>
                        `;

                        html += `
                            <th ${ showExtraDetails ? '' : 'class="detail-hidden"'}>Deviation</th>
                            <th ${ showExtraDetails ? '' : 'class="detail-hidden"'}>Heartbeat</th>
                            <th ${ showExtraDetails ? '' : 'class="detail-hidden"'}>Dec</th>
                            </tr>
                            </thead>
                            <tbody>${proxyList}</tbody>
                            </table>
                        `;

                    }
                }
            }
        } else {
            html = `<em style="color:red;">Couldn't render the feed list, it may still be processing. Feeds are updated about every half hour..</em>`;
        }
        dest.innerHTML = html;
        dest.querySelectorAll('.extra').forEach((item) => item.addEventListener('change', () => {
            showExtraDetails = event.target.checked;
            render(data);
            })
        );
    }
    // If you are developing locally, use a local version of this file,
    // Otherwise pull from the cron-generated web version
    let path = 'https://cl-docs-addresses.web.app/addresses.json';
    if(window.location.host === 'localhost:4200') {
        path = '/addresses/addresses.json';
    }else if(window.location.host.includes('chainlinklabs.vercel.app')){
        path = 'https://raw.githubusercontent.com/smartcontractkit/documentation/addresses-preview/_src/addresses/addresses-por-preview.json';
    }
    fetch(path)
    .then(response => response.json())
    .then(json => {
        render(json);
    });
</script>

<rdme-callout theme="warn">
    <p><small>Please be careful with the feeds used by your smart contracts. The feeds listed in our official documentation have been reviewed; feeds built for custom deployments by other community members might have additional risks. Please do close diligence on your feeds before implementing them in your contracts. <a href="/docs/selecting-data-feeds/">Learn more about making responsible data quality decisions.</a></small>
    </p>
</rdme-callout>
